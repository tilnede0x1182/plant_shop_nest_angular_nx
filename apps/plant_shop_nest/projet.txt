
# ARBORESCENCE
#
/home/tilnede0x1182/code/tilnede0x1182/Personnel/2025/Entrainement/plant_shop/Javascript/AngularNestNx/plant_shop_nest_angular_nx/apps/plant_shop_nest
â”œâ”€â”€ eslint.config.mjs
â”œâ”€â”€ jest.config.ts
â”œâ”€â”€ project.json
â”œâ”€â”€ projet.txt
â”œâ”€â”€ src
â”‚Â Â  â”œâ”€â”€ app
â”‚Â Â  â”‚Â Â  â”œâ”€â”€ angular
â”‚Â Â  â”‚Â Â  â”œâ”€â”€ app.controller.spec.ts
â”‚Â Â  â”‚Â Â  â”œâ”€â”€ app.controller.ts
â”‚Â Â  â”‚Â Â  â”œâ”€â”€ app.module.ts
â”‚Â Â  â”‚Â Â  â”œâ”€â”€ app.service.spec.ts
â”‚Â Â  â”‚Â Â  â””â”€â”€ app.service.ts
â”‚Â Â  â”œâ”€â”€ assets
â”‚Â Â  â””â”€â”€ main.ts
â”œâ”€â”€ tsconfig.app.json
â”œâ”€â”€ tsconfig.json
â”œâ”€â”€ tsconfig.spec.json
â””â”€â”€ webpack.config.js

5 directories, 14 files

# CONFIGURATION
#
## tsconfig.json

{
  "extends": "../tsconfig.base.json",
  "files": [],
  "include": [],
  "references": [
    {
      "path": "./tsconfig.app.json"
    },
    {
      "path": "./tsconfig.spec.json"
    }
  ],
  "compilerOptions": {
    "esModuleInterop": true
  }
}




# FICHIERS ANGULAR/NEST
#
## jest.config.ts

export default {
  displayName: 'plant_shop_nest',
  preset: '../jest.preset.js',
  testEnvironment: 'node',
  transform: {
    '^.+\\.[tj]s$': ['ts-jest', { tsconfig: '<rootDir>/tsconfig.spec.json' }],
  },
  moduleFileExtensions: ['ts', 'js', 'html'],
  coverageDirectory: '../coverage/plant_shop_nest',
};



## src/app/app.service.ts

import { Injectable } from '@nestjs/common';

@Injectable()
export class AppService {
  getData(): { message: string } {
    return { message: 'Hello API' };
  }
}



## src/app/app.module.ts

import { Module } from '@nestjs/common';
import { AppController } from './app.controller';
import { AppService } from './app.service';
import { AngularModule } from './angular/angular.module';

@Module({
  imports: [AngularModule],
  controllers: [AppController],
  providers: [AppService],
})
export class AppModule {}



## src/app/app.controller.spec.ts

import { Test, TestingModule } from '@nestjs/testing';
import { AppController } from './app.controller';
import { AppService } from './app.service';

describe('AppController', () => {
  let app: TestingModule;

  beforeAll(async () => {
    app = await Test.createTestingModule({
      controllers: [AppController],
      providers: [AppService],
    }).compile();
  });

  describe('getData', () => {
    it('should return "Hello API"', () => {
      const appController = app.get<AppController>(AppController);
      expect(appController.getData()).toEqual({ message: 'Hello API' });
    });
  });
});



## src/app/app.service.spec.ts

import { Test } from '@nestjs/testing';
import { AppService } from './app.service';

describe('AppService', () => {
  let service: AppService;

  beforeAll(async () => {
    const app = await Test.createTestingModule({
      providers: [AppService],
    }).compile();

    service = app.get<AppService>(AppService);
  });

  describe('getData', () => {
    it('should return "Hello API"', () => {
      expect(service.getData()).toEqual({ message: 'Hello API' });
    });
  });
});



## src/app/app.controller.ts

import { Controller, Get } from '@nestjs/common';

import { AppService } from './app.service';

@Controller()
export class AppController {
  constructor(private readonly appService: AppService) {}

  @Get('hello')
  getData() {
    return this.appService.getData();
  }
}



## src/app/angular/angular.controller.ts

import { Controller, Get, Req, Res, All } from '@nestjs/common';
import { Request, Response } from 'express';
import { join } from 'path';
import * as express from 'express';

@Controller('')
export class AngularController {
  private distFolder = join(
    process.cwd(),
    'dist/apps/plant-shop-angular-universal/browser'
  );

  constructor() {}

  @Get('')
  serveRoot(@Res() res: Response) {
    res.sendFile(join(this.distFolder, 'index.html'));
  }

  @All('*')
  serveAngular(@Req() req: Request, @Res() res: Response) {
    // Si l'URL commence par /, on ne fait rien
    if (req.url.startsWith('/')) {
      return;
    }

    // Sinon, on sert l'application Angular
    res.sendFile(join(this.distFolder, 'index.html'));
  }
}



## src/app/angular/angular.module.ts

import { Module, MiddlewareConsumer, NestModule } from '@nestjs/common';
import { AngularController } from './angular.controller';
import { join } from 'path';
import * as express from 'express';

@Module({
  controllers: [AngularController],
})
export class AngularModule implements NestModule {
  configure(consumer: MiddlewareConsumer) {
    // Servir les fichiers statiques
    consumer
      .apply(
        express.static(
          join(process.cwd(), 'dist/apps/plant-shop-angular-universal/browser')
        )
      )
      .forRoutes('*');
  }
}



## src/main.ts

import { Logger } from '@nestjs/common';
import { NestFactory } from '@nestjs/core';

import { AppModule } from './app/app.module';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);

  // Configurez le prÃ©fixe global pour l'API
  app.setGlobalPrefix('');

  // Configurez CORS pour le dÃ©veloppement
  app.enableCors({
    origin: [
      'http://localhost:8300',
      'http://localhost:4200',
      'http://localhost:3000',
    ],
    methods: ['GET', 'POST', 'PUT', 'DELETE'],
    credentials: true,
  });

  const port = process.env.PORT || 3000;
  await app.listen(port);

  Logger.log(`ðŸš€ Application is running on: http://localhost:${port}/`);
}

bootstrap();



